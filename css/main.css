@charset "UTF-8";
/*
   In abstracts folder shouls only contain all Sass tools and helpers used across the project. Every global variable, function, mixin and placeholder should be put in here.

   The rule of thumb for this folder is that it should not output a single line of CSS when compiled on its own.
*/
/*  
   This 'vendors' folder should contain all the CSS files from external libraries and frameworks – Normalize, Bootstrap, jQueryUI, FancyCarouselSliderjQueryPowered, and so on.
*/
/*  
   If you have to override a section of any vendor,  use this 'vendors-extensions' folder in which you can have files named exactly after the vendors they overwrite.

   For instance, vendors-extensions/_bootstrap.scss is a file containing all CSS rules intended to re-declare some of Bootstrap’s default CSS. This is to avoid editing the vendor files themselves, which is generally not a good idea.
*/
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role=list],
ol[role=list] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  *,
*::before,
*::after {
    -webkit-animation-duration: 0.01ms !important;
            animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
            animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
html {
  font-size: 62.5%;
}

body {
  font-size: 1.6rem;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/*
   Use 'not-sr-only' to undo 'sr-only', making an element visible to sighted users as well as screen readers. This can be useful when you want to visually hide something on small screens but show it on larger screens
*/
.not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

.sticky-top {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  left: 0;
}

/*
   The 'layout' folder should contain everything that takes part in laying out the site or application. This folder could have stylesheets for the main parts of the site (header, footer, navigation, sidebar…), the grid system or even CSS styles for all the forms.
*/
/*  
   components are reusable building blocks that makeup a website or app,
   and they should be usable anywhere on the page so they are completely 
   independent and held together by the layout of the page.
*/
/*
   In 'pages' folder, put the page-specific styles such as home, about ,contact, etc.
*/
/*
   this folder should contains style for different themes such as light, dark, etc
*//*# sourceMappingURL=main.css.map */